library(readstata13)
library(tidyverse)
nunn <- read.dta13("slave_trade_QJE.dta")
## IVLS estimator
IVLS <- function(X,Z,Y){
gamma_hat <- solve(t(Z)%*%Z)%*%t(Z)%*%X
}
## 2SLS estimator
## IVLS estimator
IVLS <- function(X,Z,Y){
gamma_hat <- solve(t(Z)%*%Z)%*%t(Z)%*%X
x_bar <- Z%*%gamma_hat
#then regress Y on x-bar
2sls <- solve(t(x_bar)%*%x_bar)%*%t(x_bar)%*%Y
## IVLS estimator
IVLS <- function(X,Z,Y){
gamma_hat <- solve(t(Z)%*%Z)%*%t(Z)%*%X
x_bar <- Z%*%gamma_hat
# then regress Y on x-bar
two_sls <- solve(t(x_bar)%*%x_bar)%*%t(x_bar)%*%Y
}
## 2SLS estimator
IVLS_1<- IVLS(nunn$ln_export_area, nunn$atlantic_distance_minimum, nunn$ln_maddison_pcgdp2000)
IVLS_2 <- IVLS(nunn$ln_export_area, nunn$indian_distance_minimum, nunn$ln_maddison_pcgdp2000)
IVLS_3 <- IVLS(nunn$ln_export_area, nunn$saharan_distance_minimum, nunn$ln_maddison_pcgdp2000)
IVLS_4 <- IVLS(nunn$ln_export_area, nunn$red_sea_distance_minimum, nunn$ln_maddison_pcgdp2000)
## 2sls estimator
twoSLS <- function(X,Z,Y){
gamma_hat <- solve(t(Z)%*%Z)%*%t(Z)%*%X
x_bar <- Z%*%gamma_hat
# then regress Y on x-bar
two_sls <- solve(t(x_bar)%*%x_bar)%*%t(x_bar)%*%Y
}
IVLS_1 <- twoSLS(nunn$ln_export_area, nunn$atlantic_distance_minimum, nunn$ln_maddison_pcgdp2000)
IVLS_2 <- twoSLS(nunn$ln_export_area, nunn$indian_distance_minimum, nunn$ln_maddison_pcgdp2000)
IVLS_3 <- twoSLS(nunn$ln_export_area, nunn$saharan_distance_minimum, nunn$ln_maddison_pcgdp2000)
IVLS_4 <- twoSLS(nunn$ln_export_area, nunn$red_sea_distance_minimum, nunn$ln_maddison_pcgdp2000)
## 2SLS estimator
b_hat <- solve(t(X)%*%Z%*%solve(t(Z)%*%Z)%*%t(Z)%*%X)%*%t(X)%*%Z%*%solve(t(Z)%*%Z)%*%t(Z)%*%Y
IVLS <- function(X,Y,Z){
b_hat <- solve(t(X)%*%Z%*%solve(t(Z)%*%Z)%*%t(Z)%*%X)%*%t(X)%*%Z%*%solve(t(Z)%*%Z)%*%t(Z)%*%Y
}
knitr::opts_chunk$set(echo = TRUE)
treatment <- c(rep(1,2000), rep(0, 2000))
summarise(treatment)
summarize(treatment )
mean(treatment)
2000*0.75
2000*0.7525
2000-1505
# There are 2000 units assigned to control, 75 percent have a value of 1
# There are 2000 units assigned to treatment, 75.25 % have a value of 1
treatment <- c(rep(1,2000), rep(0, 2000))
outcome <- c(rep(1,1500), rep(0, 500), rep(1, 1505), rep(0, 495))
mean(outcome)
data <- cbind(treatment, outcome)
data <- as.dataframe(cbind(treatment, outcome))
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt(var1/length(treated)) + var0/length(not_treated))
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated)))
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
}
itt <- ITT(treatment, outcome)
itt
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
return(c("ITT" = itt, "SE ITT" = se_itt))
}
itt <- ITT(treatment, outcome)
itt
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
# t stat
t_stat <- itt / se_itt
df <- (var1/length(treated) + var0/length(not_treated))Ë†2 /
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
# t stat
t_stat <- itt / se_itt
df <- (var1/length(treated) + var0/length(not_treated))^2 /
((var1/length(treated))Ë†2 / (length(treated) - 1) +
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
# t stat
t_stat <- itt / se_itt
df <- (var1/length(treated) + var0/length(not_treated))^2 /
((var1/length(treated))^2 / (length(treated) - 1) +
(var0/length(not_treated))^2 / (length(not_treated) - 1))
# p value
p_value <- pt(-abs(t_stat), df = df, ncp = 0, lower.tail = TRUE) +
pt(abs(t_stat), df = df, ncp = 0, lower.tail = FALSE)
return(c("ITT" = itt, "SE ITT" = se_itt, "p-value" = p_value))
}
itt <- ITT(treatment, outcome)
print(itt)
knitr::opts_chunk$set(echo = TRUE)
# There are 2000 units assigned to control, 75 percent have a value of 1
# There are 2000 units assigned to treatment, 75.25 % have a value of 1
treatment <- c(rep(1,2000), rep(0, 2000))
outcome <- c(rep(1,1500), rep(0, 500), rep(1, 1505), rep(0, 495))
data <- cbind(treatment, outcome)
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
# t stat
t_stat <- itt / se_itt
df <- (var1/length(treated) + var0/length(not_treated))^2 /
((var1/length(treated))^2 / (length(treated) - 1) +
(var0/length(not_treated))^2 / (length(not_treated) - 1))
# p value
p_value <- pt(-abs(t_stat), df = df, ncp = 0, lower.tail = TRUE) +
pt(abs(t_stat), df = df, ncp = 0, lower.tail = FALSE)
return(c("ITT" = itt, "SE ITT" = se_itt, "p-value" = p_value))
}
itt <- ITT(treatment, outcome)
print(itt)
itt <- ITT[1,]
itt <- ITT
itt
itt <- ITT[1]
intention_to_treat <- itt[1]
itt
itt <- ITT(treatment, outcome)
print(itt)
itt
itt[1,2]
itt[2,1]
itt[1,1]
# There are 2000 units assigned to control, 75 percent have a value of 1
# There are 2000 units assigned to treatment, 75.25 % have a value of 1
treatment <- c(rep(1,2000), rep(0, 2000))
overall_outcome <- c(rep(1,1500), rep(0, 500), rep(1, 1505), rep(0, 495))
receipt <- c(rep(0,2000), rep(1,500), rep(0,1500))
data <- cbind(treatment, overall_outcome, receipt)
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
# t stat
t_stat <- itt / se_itt
df <- (var1/length(treated) + var0/length(not_treated))^2 /
((var1/length(treated))^2 / (length(treated) - 1) +
(var0/length(not_treated))^2 / (length(not_treated) - 1))
# p value
p_value <- pt(-abs(t_stat), df = df, ncp = 0, lower.tail = TRUE) +
pt(abs(t_stat), df = df, ncp = 0, lower.tail = FALSE)
return(c("ITT" = itt, "SE ITT" = se_itt, "p-value" = p_value))
}
itt <- ITT(treatment, overall_outcome)
print(itt)
## First, we will conduct IV analysis to estimate the complier
## average causal effect.
# The treatment assignment instruments for treatment receipt in the
# instrumental-variables estimator (wald estimator)
# in this case (with a binary treatment and a binary outcome)
# we can estimate the CACE as the same as the IV estimator
# It is Y^t - Y^c / X^t - X^c
# first, we get the numerator, which is the ITT that we already calculated
intention_to_treat <- 0.00250000
# now we need to get the denominator, which is the proportion of compliers
# first we estimate share of never-takers among those assigned to treatment
share_never_treated <- 1500/2000
# now we need to estimate the number of compliers among assigned to control
compliers_incontrol <- 2000 - (share_never_treated*2000)
# now we get the estimated share of compliers in the study
total_compliers <- compliers_incontrol + 500
share_compliers <- total_compliers/4000
# now we calculate the CACE estimate
cace <- intention_to_treat/share_compliers
print(cace)
compliers_incontrol
share_compliers
intention_to_treat
# finally, let's estimate the turnout among compliers in the control group.
# to do this, we use the estimated number of compliers in the control group,
# from above.
turnout_compliers_control <- 0.82*compliers_incontrol
turnout_compliers_control
410/500
2086+486
## First, we will conduct IV analysis to estimate the complier
## average causal effect.
# The treatment assignment instruments for treatment receipt in the
# instrumental-variables estimator (wald estimator)
# in this case (with a binary treatment and a binary outcome)
# we can estimate the CACE as the same as the IV estimator
# It is Y^t - Y^c / X^t - X^c
# first, we get the numerator, which is the ITT that we already calculated
intention_to_treat <- 0.00250000
# now we need to get the denominator, which is the proportion of compliers
# first we estimate share of never-takers among those assigned to treatment
share_never_treated <- 1500/2000
# now we need to estimate the number of compliers among assigned to control
compliers_incontrol <- 2000 - (share_never_treated*2000)
# now we get the estimated share of compliers in the study
total_compliers <- compliers_incontrol + 500
share_compliers <- total_compliers/4000
# now we calculate the CACE estimate
cace <- intention_to_treat/share_compliers
print(cace)
# now we can estimate the turnout rate among compliers assigned to the control
# group
# we have already estimated the number of compliers in the control group
compliers_incontrol
# we want the proportion of compliers in control
share_compliers_control <- compliers_incontrol/2000
# then we want the share of never treats in the treatment * their voting rate
voting_nevertreat <- share_never_treated*73
# now we can solve the equation for x, which is the estimate of turnout for
# the compliers in the control
turnout_compliers_control <- (voting_nevertreat - 75)/share_compliers_control
turnout_compliers_control
voting_nevertreat
share_never_treated
share_never_treated*73
# now we can solve the equation for x, which is the estimate of turnout for
# the compliers in the control
turnout_compliers_control <- (75 - voting_nevertreat)/share_compliers_control
turnout_compliers_control
mean_control
mean(overall_outcome[treatment == 0])
mean(overall_outcome[treatment == 1])
# There are 2000 units assigned to control, 75 percent have a value of 1
# There are 2000 units assigned to treatment, 75.25 % have a value of 1
treatment <- c(rep(0,2000), rep(1, 2000))
overall_outcome <- c(rep(1,1500), rep(0, 500), rep(1, 1505), rep(0, 495))
receipt <- c(rep(0,2000), rep(1,500), rep(0,1500))
data <- cbind(treatment, overall_outcome, receipt)
ITT <- function(treatment, outcome){
mean_control <- mean(outcome[treatment == 0])
mean_treatment <- mean(outcome[treatment == 1])
itt <- mean_treatment - mean_control
#standard error
treated <- outcome[treatment == 1]
var1 <- sum((treated - mean(treated))^2) / (length(treated) - 1)
not_treated <- outcome[treatment == 0]
var0 <- sum((not_treated - mean(not_treated))^2) / (length(not_treated) - 1)
#se_itt
se_itt <- sqrt((var1/length(treated)) + var0/length(not_treated))
# t stat
t_stat <- itt / se_itt
df <- (var1/length(treated) + var0/length(not_treated))^2 /
((var1/length(treated))^2 / (length(treated) - 1) +
(var0/length(not_treated))^2 / (length(not_treated) - 1))
# p value
p_value <- pt(-abs(t_stat), df = df, ncp = 0, lower.tail = TRUE) +
pt(abs(t_stat), df = df, ncp = 0, lower.tail = FALSE)
return(c("ITT" = itt, "SE ITT" = se_itt, "p-value" = p_value))
}
itt <- ITT(treatment, overall_outcome)
print(itt)
2000*0.75
# create the dataset
y <- c(rep(0, 500), rep(1, 300), rep(0, 60), rep(1, 40), rep(0, 20), rep(1, 30))
d <- c(rep(0, 500), rep(0, 300), rep(0, 60), rep(0, 40), rep(1, 20), rep(1, 30))
z <- c(rep(0, 500), rep(0, 300), rep(1, 60), rep(1, 40), rep(1, 20), rep(1, 30))
df <- cbind(y, d, z)
# create the dataset
y <- c(rep(0, 500), rep(1, 300), rep(0, 60), rep(1, 40), rep(0, 20), rep(1, 30))
d <- c(rep(0, 500), rep(0, 300), rep(0, 60), rep(0, 40), rep(1, 20), rep(1, 30))
z <- c(rep(0, 500), rep(0, 300), rep(1, 60), rep(1, 40), rep(1, 20), rep(1, 30))
df <- cbind(y, d, z)
# a - calculate the itt
mean_control <- mean(y[z == 0])
mean_treatment <- mean(y[z == 1])
itt <- mean_treatment - mean_control
print(itt)
# create the dataset
y <- c(rep(0, 500), rep(1, 300), rep(0, 60), rep(1, 40), rep(0, 20), rep(1, 30))
d <- c(rep(0, 500), rep(0, 300), rep(0, 60), rep(0, 40), rep(1, 20), rep(1, 30))
z <- c(rep(0, 500), rep(0, 300), rep(1, 60), rep(1, 40), rep(1, 20), rep(1, 30))
df <- cbind(y, d, z)
# a - calculate the itt
mean_control <- mean(y[z == 0])
mean_treatment <- mean(y[z == 1])
itt <- mean_treatment - mean_control
print(itt) # the itt is 0.0916667
# b - 50 compliers (since there are no always takers.)
# c - among z = 0 (assigned to control), how many are compliers ?
# we can't make the calculation, we can only estimate it.
# there can be never takers and we don't see the difference
# d - proportion of compliers
# now we need to get the denominator, which is the proportion of compliers
# first we estimate share of never-takers among those assigned to treatment
share_nev_treated <- 100/150
# now we need to estimate the number of compliers among assigned to control
compliers_incont <- 800 - (share_nev_treated*800)
# now we get the estimated share of compliers in the study
tot_compliers <- compliers_incont + 50
share_complier <- tot_compliers/950
# now we calculate the CACE estimate
ca_ce <- intention_to_treat/share_compliers
print(ca_ce)
# now we calculate the CACE estimate
ca_ce <- itt/share_complier
print(ca_ce)  # 0.01
# d -
print(share_complier <- tot_compliers/950)
